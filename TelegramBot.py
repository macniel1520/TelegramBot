import telebot
from telebot import types
import random
from os import getenv

SECRET_KEY = str(getenv("SECRET")) # –ë–µ—Ä–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ —Ñ–∞–π–ª–∞ .env (–í docker-compose –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
game_vars = ["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞", "–°—á–µ—Ç"]

bot = telebot.TeleBot(SECRET_KEY, parse_mode=None)
# @bot.message_handler(content_types=['text'])
# def get_text_messages(message):
#     if message.text == "–ü—Ä–∏–≤–µ—Ç":
#         bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –ø–∞—Ä–µ–Ω—å –∏–ª–∏ –¥–µ–≤—É—à–∫–∞ ?")
#     elif message.text == "/help":
#         bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ '–ü—Ä–∏–≤–µ—Ç'")
#     elif message.text == "–î–µ–≤—É—à–∫–∞":
#         bot.send_message(message.from_user.id, "–¢—ã —Å–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –¥–µ–≤—É—à–∫–∞ –Ω–∞ —Å–≤–µ—Ç–µ ‚ù§Ô∏è")
#     elif message.text == "–ü–∞—Ä–µ–Ω—å":
#         bot.send_message(message.from_user.id, "–¢—ã —Å–∞–º—ã–π –ª—É—á—à–∏–π –ø–∞—Ä–µ–Ω—å –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ")
#     else:
#         bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


# inMurkup = types.InlineKeyboardMarkup(row_width=1)
# but4 = types.InlineKeyboardButton("–ö–∞–º–µ–Ω—å", callback_data='rock')
# but5 = types.InlineKeyboardButton("–ù–æ–∂–Ω–∏—Ü—ã", callback_data='scissors')
# but6 = types.InlineKeyboardButton("–ë—É–º–∞–≥–∞", callback_data='paper')
# inMurkup.add(but4, but5, but6)
# user_action = input

# @bot.callback_query_handler(func=lambda call: True)
# def callback_inline(call):

@bot.message_handler(commands=['info'])
def get_bot_info(message):
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è! –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

@bot.message_handler(commands=['start'])
def get_start_chat(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    but1 = types.KeyboardButton("–ö–æ–º–∞–Ω–¥—ã")
    markup.add(but1)
    bot.send_message(message.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!", reply_markup=markup)
@bot.message_handler(commands=['game'])
def get_bot_info(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    buttons = [types.KeyboardButton(i) for i in game_vars]
    # but2 = types.KeyboardButton("–ö–∞–º–µ–Ω—å")
    # but3 = types.KeyboardButton("–ù–æ–∂–Ω–∏—Ü—ã")
    # but4 = types.KeyboardButton("–ë—É–º–∞–≥–∞")
    # but5 = types.KeyboardButton("–°—á–µ—Ç")
    markup.add(buttons)
    bot.send_message(message.from_user.id, "–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π –ø–æ–≤–µ—Å–µ–ª–∏–º—Å—è!\n–í—ã–±–∏—Ä–∞–π - –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞:"
                     .format(message.from_user), reply_markup=markup)

@bot.message_handler(content_types=['text'])
def func(message):
    computer_counts = 0
    user_counts = 0
    draw = 0
    possible_actions = ["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞"]
    computer_actions = random.choice(possible_actions)
    if message.text == "–ö–æ–º–∞–Ω–¥—ã":
        bot.send_message(message.chat.id, text="1)/info - –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–æ –º–µ–Ω—è\n2)/game - –ò–≥—Ä–∞—Ç—å –≤  –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞\n")
    elif message.text == "–ö—Ä—ã–º":
        bot.send_message(message.chat.id, "üá∑üá∫ –ù–ê–®! üá∑üá∫")
    elif message.text == computer_actions:
        draw += 1
        bot.send_message(message.chat.id, f"–û–±–∞ –∏–≥—Ä–æ–∫–∞ –≤—ã–±—Ä–∞–ª–∏: {message.text}.\n–ù–∏—á—å—è!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /game")

    elif message.text == "–ö–∞–º–µ–Ω—å":
        if computer_actions == "–ù–æ–∂–Ω–∏—Ü—ã":
            user_counts += 1
            bot.send_message(message.chat.id, text="–ö–∞–º–µ–Ω—å –±—å–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã.\n–í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /game")
        else:
            computer_counts += 1
            bot.send_message(message.chat.id, text="–ë—É–º–∞–≥–∞ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å.\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /game")
    elif message.text == "–ù–æ–∂–Ω–∏—Ü—ã":
        if computer_actions == "–ë—É–º–∞–≥–∞":
            user_counts += 1
            bot.send_message(message.chat.id, text="–ù–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É.\n–í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /game")
        else:
            computer_counts += 1
            bot.send_message(message.chat.id, text="–ù–æ–∂–Ω–∏—Ü—ã –ª–æ–º–∞—é—Ç—Å—è –æ–± –∫–∞–º–µ–Ω—å.\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /game")
    elif message.text == "–ë—É–º–∞–≥–∞":
        if computer_actions == "–ö–∞–º–µ–Ω—å":
            user_counts += 1
            bot.send_message(message.chat.id, text="–ë—É–º–∞–≥–∞ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å.\n–í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /game")
        else:
            computer_counts += 1
            bot.send_message(message.chat.id, text="–ù–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É.\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /game")
    elif message.text == "–°—á–µ—Ç":
        bot.send_message(message.chat.id, text=f"–ü–æ–±–µ–¥—ã = {user_counts}\n"
                                               f"–ü–æ—Ä–∞–∂–µ–Ω–∏—è = {computer_counts}\n"
                                               f"–ù–∏—á—å–∏ = {draw}")
    else:
        bot.send_message(message.chat.id, text="–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –Ω–∞–ø–∏—à–∏ /start")

    # markup_inline = types.InLineKeyBoardMarkup()
    # item_yes = types.InLineKeyBoardButton(text = '–î–∞', callback_data = 'yes')
    # item_no = types.InLineKeyBoardButton(text = '–ù–µ—Ç', callback_data = 'no')
    #
    # markup_inline.add(item_yes, item_no)
    # bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Å',
    #     reply_markup = markup_inline
    # )
# @bot.callback_query_handler(func = lambda call : True)
# def answer(call):
#         if call.data == 'yes':
#             markup_reply = types.ReplyKeyboardMarkup(resize_keyboard = True)
#             item_female = types.KeyboardButton('–î–µ–≤—É—à–∫–∞')
#             item_male = types.KeyboardButton('–ü–∞—Ä–µ–Ω—å')
#
#             markup_reply.add(item_female, item_male)
#             bot.send_message(call.message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫',
#                     reply_markup = markup_reply
#             )
#         elif call.data == 'no':
#             pass
bot.polling(none_stop=True, interval=0)
